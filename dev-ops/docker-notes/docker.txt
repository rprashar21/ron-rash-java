What is Conatiner ?
Container is a loosely couple env with all the depedencies ur app needs to run , librearies external ibs
It will provide all the runtime ,, it  is like a software packaging unit where u pack all that u need and run it on any env where
there is a container runtime

What is Docker?
Docker is a containerization tool that packages your application with all dependencies and runtime.
Unlike VMs, Docker does not need a full OS, so it's lightweight, fast, and portable.
Containers are isolated, quick to start/stop, and can run anywhere Docker is installed (local, cloud, server).
its is platfrom idependent, build once and run anywhere ,fast lighwieght and ideal for microservces ci/cd versioning

Key Concepts
Image: Blueprint (static) of your app.
Container: Running instance of an image.
Dockerfile: Instructions to build an image.
Docker Hub: Public registry to push/pull images

Build an image
docker build -t username/app-name .

Run a conatiner
docker run -d -p hostPort:containerPort username/app-name

Multiple Versions
docker run -d -p 8081:8080 username/app-name:0.0.1-RELEASE
docker run -d -p 8082:8080 username/app-name:0.0.2-RELEASE

Push to a docker hub
docker push username/app-name

Docker lets you build, run, and ship apps quickly in isolated environments using containers.
It's lightweight, portable, and perfect for microservices and cloud-native apps.


These are the basic docker commnads
| Action                  | Command                             |
| ----------------------- | ----------------------------------- |
| Show running containers | `docker container ls`               |
| Show all containers     | `docker container ls -a`            |
| Stop all containers     | `docker stop $(docker ps -aq)`      |
| Remove all images       | `docker rmi -f $(docker images -q)` |
| Show logs               | `docker logs <container-id>`        |
| Check disk usage        | `docker system df`                  |
| Clean unused data       | `docker system prune -a`            |
| Show stats              | `docker stats <container-id>`       |
| Start/Stop container    | `docker start/stop <container-id>`  |


